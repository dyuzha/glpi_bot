# bot/handlers/tickets/forks/inc_it.py

import logging
from typing import Optional
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from glpi_bot.bot.handlers.tickets.models import TextInputStep
from glpi_bot.bot.handlers.tickets.steps import title_step
from glpi_bot.bot.handlers.utils import default_handle
from glpi_bot.bot.states import FinalStates
from glpi_bot.bot.keyboards import base_buttons
from glpi_bot.bot.handlers.tickets import bot_message, inc_it_fork_maker
from glpi_bot.bot.handlers.tickets.steps.title_step import title_step

logger = logging.getLogger(__name__)


async def call_title(
        callback: CallbackQuery,
        state: FSMContext,
        category: str,
        itilcategories_id: int,
        prompt:str = "üí¨ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞—è–≤–∫–∏\n(–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã)",
    ):

    await state.update_data(itilcategories_id = itilcategories_id)
    await bot_message.add_field(state, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", category)
    await title_step.show_after_callback(callback, state, prompt)


# @inc_it_fork_maker.register_callback(name="no_inet", text="–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞")
async def inet_truble(callback: CallbackQuery, state: FSMContext):
    await call_title(callback, state, "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", 1)


# @inc_it_fork_maker.register_callback(name="invalid_mail", text="–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—á—Ç–∞")
async def mail_truble(callback: CallbackQuery, state: FSMContext):
    await call_title(callback, state, "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—á—Ç–∞", 23)


# @inc_it_fork_maker.register_callback(name="invalid_rdp", text="–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∫–∞")
async def rdp_truble(callback: CallbackQuery, state: FSMContext):
    await call_title(callback, state, "–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", 3)


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –æ–±–∞–±–æ—Ç—á–∏–∫–æ–≤
inc_it_fork_maker.register_many(
    [
        # ("key", "button_text", func),
        ("no_inet", "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç–∞", inet_truble),
        ("invalid_mail", "–ü–æ—á—Ç–∞", mail_truble),
        ("rdp", "–£–¥–∞–ª–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", rdp_truble),

        ("office", "–û—Ñ–∏—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –æ—Ñ–∏—Å–Ω—ã–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏",
            "itilcategories_id": 15,
        }),

        ("peripheral", "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ c –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º –Ω–∞ —Ä–∞–±–æ—á–µ–º –º–µ—Å—Ç–µ",
            "itilcategories_id": 17,
        }),

        ("print", "–ü—Ä–∏–Ω—Ç–µ—Ä/—Å–∫–∞–Ω–µ—Ä", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º/—Å–∫–∞–Ω–µ—Ä–æ–º",
            "itilcategories_id": 17,
        }),

        ("resuerce", "–î–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—É—Ä—Å–∞–º", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ c –¥–æ—Å—Ç—É–ø–æ–º –∫ —Ä–µ—Å—É—Ä—Å–∞–º",
            "itilcategories_id": 5,
        }),

        ("resuerce", "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ê–†–ú", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ c –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –ê–†–ú",
            "itilcategories_id": 60,
        }),

        ("phone", "–¢–µ–ª–µ—Ñ–æ–Ω–∏—è", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ c —Ç–µ–ª–µ—Ñ–æ–Ω–∏–µ–π",
            "itilcategories_id": 73,
        }),

        ("video", "–í–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ", call_title, {
            "category": "–ü—Ä–æ–±–ª–µ–º–∞ c –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º",
            "itilcategories_id": 2,
        }),

    ],
)
