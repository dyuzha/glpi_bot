import logging
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from glpi_bot.bot.handlers.utils import default_handle
from glpi_bot.bot.states import FinalStates
from glpi_bot.bot.keyboards import base_buttons
from glpi_bot.bot.handlers.tickets import bot_message, incident_1c_fork_maker


logger = logging.getLogger(__name__)


@incident_1c_fork_maker.register_callback(name="lic", text="–ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–∏—Ü–µ–Ω–∑–∏–µ–π")
async def lic_handler(callback: CallbackQuery, state: FSMContext):
    logger.debug("Call lic_handler")
    await bot_message.add_field(state, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–∏—Ü–µ–Ω–∑–∏–µ–π")

    prompt = await bot_message.render(state,
                                      "üí¨ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞—è–≤–∫–∏"
                                      "(–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã)"
                                      )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[base_buttons])
    await state.set_state(FinalStates.title)
    await default_handle(callback, state, prompt, keyboard)


@incident_1c_fork_maker.register_callback(name="obmen", text="–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–±–º–µ–Ω–æ–º")
async def obmen_handler(callback: CallbackQuery, state: FSMContext):
    logger.debug("Call obmen_handler")
    await bot_message.add_field(state, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–±–º–µ–Ω–æ–º")

    prompt = await bot_message.render(state,
                                      "üí¨ –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞—è–≤–∫–∏"
                                      "(–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã)"
                                      )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[base_buttons])

    await state.set_state(FinalStates.title)
    await default_handle(callback, state, prompt, keyboard)
